% class ?
% richardson's extrapolation

syms x
sym_f = x*exp(x);

f = matlabFunction(sym_f);
sym_f1 = diff(sym_f);

f1 = matlabFunction(sym_f1);


% second order
n1 = @(f, x0, h) (1/(2*h)) * (f(x0+h) - f(x0-h));

% fourth order
n2 = @(f, x0, h) n1(f, x0, h/2) + (1/3)*(n1(f, x0, h/2) - n1(f, x0, h));

% sixth order
n3 = @(f, x0, h) n2(f, x0, h/2) + (1/15)*(n2(f, x0, h/2) - n1(f, x0, h));

x0 = 2;
n1(f, x0, 0.05)
n2(f, x0, 0.1)
n3(f, x0, 0.2)


range = 0:h:2*pi;
count = length(range);
step_iter = 1:count; 
m = zeros(count, count);

slope = [];
for i=step_iter
    x0 = range(i);
    
    slope(i) = a * f(x0 - h) + b * f(x0) + c * f(x0 +h);

           
end

true = f(range);


close all;
plot(range, true, 'r');
hold on;
plot(range, val, 'b');
plot(range, out, 'c--')
legend('True Func', 'True Diff', '2nd Order', 'Location', 'best');

